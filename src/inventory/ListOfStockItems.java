/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import java.awt.Color;
import java.awt.Component;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.DB;
import model.Item;
import model.Logs;
import model.Stock;
import model.Transactions;
import model.User;

/**
 *
 * @author L R E
 */

public class ListOfStockItems extends javax.swing.JFrame {
    private static String currentMenu = null;
    private static String barcode = null;
    private static User sessionUser = null;
    private static String searchParams = null;
    private static String action = null;
    DB db = new DB();
    public DefaultTableModel FillTable(String barcode, String searchParams) throws SQLException, ClassNotFoundException, ParseException{
        DefaultTableModel model = new DefaultTableModel();
        String itemName = null;
        model.setRowCount(0);
        DB db = new DB();
        
        List<Stock> items = new ArrayList<Stock>();
//        lblStockName.setText(items.get().getItemName());

        if(searchParams.equals("ID")){
            items = db.getAllStocksFromBarcode(barcode);
        }
        else{
            items = db.getAllStocksFromName(barcode);
        }
        
        model.addColumn("Item ID");
        model.addColumn("Item ID");
        model.addColumn("Item Name");
        model.addColumn("Quantity");
        model.addColumn("Threshold");
        model.addColumn("Status");

        for(int i = 0; i < items.size(); i++){
//            this.itemStatus = "Good";
//            if(items.get(i).getStatus() != 0){
//                this.itemStatus = "Bad";
//            }
//            this.setTableRenderer();
            if(i == 0){
                itemName = items.get(i).getItemName();
            }
            Object [] rowData = {
                items.get(i).getId(),
                items.get(i).getItemID(),
                items.get(i).getItemName(),
                items.get(i).getQuantity(),
                items.get(i).getThreshold()
//                this.itemStatus
            };
            lblStockName.setText(itemName);
            model.addRow(rowData);
        }
        
        return model;
    }
    public ListOfStockItems(User user, String currentMenu, String id, String searchParams, String action) throws SQLException, ClassNotFoundException, ParseException {
        initComponents();
        this.barcode = id;
        this.searchParams = searchParams;
        DefaultTableModel model = this.FillTable(id, searchParams);
        this.currentMenu = currentMenu;
        this.sessionUser = user;
        this.action = action;
        stockTableList.setModel(model);
        if(searchParams == "ID"){
            lblListOfStocksHeader.setText("List of Stocks for");
        }
        else {
            lblListOfStocksHeader.setText("Search Results");
            lblStockName.setText(null);
        }
        db.setLogStatus(this.sessionUser.getEmployeeID(), this.sessionUser.getFullName(), "Main Menu", "Visit");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        stockTableList = new javax.swing.JTable();
        lblListOfStocksHeader = new javax.swing.JLabel();
        lblStockName = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stockTableList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        stockTableList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        stockTableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        stockTableList.setRowHeight(25);
        stockTableList.setRowMargin(5);
        stockTableList.setSelectionBackground(new java.awt.Color(173, 216, 230));
        stockTableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockTableListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stockTableList);

        lblListOfStocksHeader.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblListOfStocksHeader.setText("List of Stocks for: ");

        lblStockName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Click on a cell to proceed");
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblListOfStocksHeader)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStockName, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblListOfStocksHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStockName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(502, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(89, 89, 89)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stockTableListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockTableListMouseClicked
        try {
            int row = stockTableList.rowAtPoint(evt.getPoint());
            int id = (int) stockTableList.getValueAt(row, 0);
            this.setVisible(false);
            if(action == "Damage"){
                FinalizeScanItem item = new FinalizeScanItem(this.sessionUser, id, "Damage", barcode, searchParams, action);
                item.setTitle("DSL Inventory System | Finalize Scan Item");
                item.pack();
                item.setLocationRelativeTo(null);
                item.setVisible(true);
            }
            else if(action == "Replenish"){
                FinalizeScanItem item = new FinalizeScanItem(this.sessionUser, id, "Replenish", barcode, searchParams, action);
                item.setTitle("DSL Inventory System | Finalize Scan Item");
                item.pack();
                item.setLocationRelativeTo(null);
                item.setVisible(true);
            }
            else if(action == "Transact"){
                FinalizeScanItem item = new FinalizeScanItem(this.sessionUser, id, "Transact", barcode, searchParams, action);
                item.setTitle("DSL Inventory System | Finalize Scan Item");
                item.pack();
                item.setLocationRelativeTo(null);
                item.setVisible(true);
            }
            else{
                
                ScanItem item = new ScanItem(this.sessionUser, id, barcode, searchParams, action);
                item.setTitle("DSL Inventory System | Main");
                item.pack();
                item.setLocationRelativeTo(null);
                item.setVisible(true);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ListOfStockItems.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ListOfStockItems.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(ListOfStockItems.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ListOfStockItems.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stockTableListMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            this.setVisible(false);
            Main main = new Main(this.sessionUser, "Inventory");
            main.setTitle("DSL Inventory System | Main");
            main.pack();
            main.setLocationRelativeTo(null);
            main.setExtendedState(JFrame.MAXIMIZED_BOTH);
            main.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblListOfStocksHeader;
    private javax.swing.JLabel lblStockName;
    private javax.swing.JTable stockTableList;
    // End of variables declaration//GEN-END:variables
}
