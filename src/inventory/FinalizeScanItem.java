/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import java.awt.Color;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.DB;
import model.Stock;
import model.User;

/**
 *
 * @author L R E
 */
public class FinalizeScanItem extends javax.swing.JFrame {
    static class MyTableModel extends DefaultTableModel {
        List<Color> rowColours = Arrays.asList(
            Color.RED,
            Color.GREEN,
            Color.CYAN
        );

        public void setRowColour(int row, Color c) {
            rowColours.set(row, c);
            fireTableRowsUpdated(row, row);
        }

        public Color getRowColour(int row) {
            return rowColours.get(row);
        }

        @Override
        public int getRowCount() {
            return 3;
        }

        @Override
        public int getColumnCount() {
            return 3;
        }

        @Override
        public Object getValueAt(int row, int column) {
            return String.format("%d %d", row, column);
        }
    }
    
    private User sessionUser;
    DB db = new DB();
    private int itemID = 0;
    private static int identifier = 0;
    private String barcode = null;
    private final JPanel panel = new JPanel();
    private static String searchParams = null;
    private static String inventoryAction = null;
    private static String action = null;
    public FinalizeScanItem(User user, int itemID, String action, String barcode, String searchParams, String inventoryAction) throws ClassNotFoundException, SQLException {
        initComponents();
        this.sessionUser = user;
        this.identifier = itemID;
        this.barcode = barcode;
        this.action = action;
        this.searchParams = searchParams;
        this.inventoryAction = inventoryAction;
        lblTransactionType.setText(inventoryAction);
        this.setFields(itemID, action);
    }
    public void setFields(int itemID, String action) throws ClassNotFoundException, SQLException{
        Stock stock = new Stock();
        stock = db.getStockItem(itemID);
        if(action == "Deplete"){
            txtQuantity.setText(Integer.toString(stock.getQuantity()));
            txtQuantity.setEditable(false);
        }
        lblItemID.setText(stock.getItemID());
        lblItemName.setText(stock.getItemName());
//        comboType.setSelectedItem(action);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblItemID = new javax.swing.JLabel();
        lblItemName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        lblTransactionType = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Item Details");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Item No:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Item Name:");

        lblItemID.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblItemID.setText(" ");

        lblItemName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Quantity:");

        txtNote.setColumns(20);
        txtNote.setRows(5);
        jScrollPane1.setViewportView(txtNote);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Note:");

        btnSubmit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Transaction Type:");

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblTransactionType.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblItemID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblItemName, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(txtQuantity))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(lblTransactionType, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(btnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSubmit)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblItemID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSubmit)
                            .addComponent(btnCancel)))
                    .addComponent(lblTransactionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        int quantity = 0;
        try {
            boolean duplicateBarcodeStatus = false;
            long barcodeIdentifier = 0;
            quantity = Integer.parseInt(txtQuantity.getText());
//            String action = (String) comboType.getSelectedItem();
            String itemID = lblItemID.getText();
            String itemName = lblItemName.getText();
            String note = txtNote.getText();
            
            if(action == "Replenish"){
                do {
                    barcodeIdentifier = this.generateRandomBarcodeIdentifier();
                    duplicateBarcodeStatus = db.determineDuplicateBarcode(barcodeIdentifier);
                }while(duplicateBarcodeStatus);
            }
            else {
                barcodeIdentifier = 0;
            }
            String result = db.transactStock(this.sessionUser, itemID, itemName, action, quantity, note, identifier, barcodeIdentifier);
            
            if(result.equals("Successful")){
                JOptionPane.showMessageDialog(panel, "Successful Transaction", "Success", JOptionPane.INFORMATION_MESSAGE);
                this.setVisible(false);
                this.setVisible(false);
                Main main = new Main(this.sessionUser, "Inventory");
                main.setTitle("DSL Inventory System | Main");
                main.pack();
                main.setLocationRelativeTo(null);
                main.setExtendedState(JFrame.MAXIMIZED_BOTH);
                main.setVisible(true);
            }
            else if(result.equals("Exceed Count")){
                JOptionPane.showMessageDialog(panel, "Transaction quantity exceeeded", "Error", JOptionPane.WARNING_MESSAGE);
//                this.setVisible(false);
//                ScanItem item = new ScanItem(this.sessionUser, this.itemID, this.barcode);
//                item.setTitle("DSL Inventory System | Main");
//                item.pack();
//                item.setLocationRelativeTo(null);
//                item.setVisible(true);
            }
            else {
                JOptionPane.showMessageDialog(panel, "System Error", "Error", JOptionPane.WARNING_MESSAGE);
//                this.setVisible(false);
//                ScanItem item = new ScanItem(this.sessionUser, this.itemID, this.barcode);
//                item.setTitle("DSL Inventory System | Main");
//                item.pack();
//                item.setLocationRelativeTo(null);
//                item.setVisible(true);
            }
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(panel, "Your input is not a number", "Error", JOptionPane.WARNING_MESSAGE);
//            try{
//                float quantity = Float.parseFloat(txtQuantity.getText());
//            }catch(NumberFormatException ex){
//                
//            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FinalizeScanItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FinalizeScanItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(FinalizeScanItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        try {
            this.setVisible(false);
            ListOfStockItems item = new ListOfStockItems(this.sessionUser, "Inventory", barcode, searchParams, inventoryAction);
//            ScanItem item = new ScanItem(this.sessionUser, itemID);
            item.setTitle("DSL Inventory System | Main");
            item.pack();
            item.setLocationRelativeTo(null);
            item.setExtendedState(JFrame.MAXIMIZED_BOTH);
            item.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FinalizeScanItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FinalizeScanItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(FinalizeScanItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelActionPerformed
private Long generateRandomBarcodeIdentifier(){
        Long barcodeIdentifier = null;
        Random r = new Random();
        return barcodeIdentifier = 1000000000000L+((long)(r.nextDouble()*(10000000000000L-1000000000000L)));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblItemID;
    private javax.swing.JLabel lblItemName;
    private java.awt.Label lblTransactionType;
    private javax.swing.JTextArea txtNote;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
